{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Cars API",
    "description": "API documentation for weather api"
  },
  "tags": [
    { "name": "Forecast", "description": "Get forecast" },
    { "name": "Admin", "description": "Operations related to admin " }
  ],
  "paths": {
    "/weather/cityForecast": {
      "post": {
        "tags": ["Forecast"],
        "summary": "Current and forecasts weather data",
        "parameters": [
          {
            "name": "get forecast of current city",
            "in": "body",
            "description": "name of the current city",
            "required": true,
            "schema": {
              "properties": {
                "city": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "item",
            "in": "query",
            "description": "daily forecast for 5 days  or current day",
            "required": false,
            "type": "string",
            "enum": ["CurrentDay", "For5Days"]
          }
        ],
        "responses": {
          "200": {
            "description": "get forecast of current city",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/forecast"
            }
          },
          "401": {
            "description": "Unauthorized"

          },
          "404": {
            "description": "Not Found. You can get 404 error if data with requested parameters (lat, lon, date etc) does not exist in service database. You must not retry the same request"
          }
        }
      }

    },
    "/weather/subscribe": {
      "post": {
        "tags": ["Forecast"],
        "summary": "Subscribe on forecast and forecasts alerts",
        "parameters": [
          {
            "in": "body",
            "description": "Create subscribe with data",
            "required": true,
            "name": "Subscriber properties",
            "schema": {
              "properties": {
                "name":{
                  "type": "string"
                },
                "email":{
                  "type": "string"
                },
                "age":{
                  "type": "string"
                },
                "city":{
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "subscribe forecast of your city",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/subscribe"
            }
          },
          "401": {
            "description": "Unauthorized"

          },
          "400": {
            "description": "Fields are not valid"

          },
          "404": {
            "description": "Not Found. You can get 404 error if data with requested parameters (lat, lon, date etc) does not exist in service database. You must not retry the same request"
          }
        }
      }

    },
    "/weather/stop-subscribe": {
      "post": {
        "tags": ["Forecast"],
        "summary": "Unsubscribe on forecast and forecasts alerts",
        "parameters": [
          {
            "in": "body",
            "description": "Unsubscribe",
            "required": true,
            "name": "Subscriber email",
            "schema": {
              "properties": {
                "email":{
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "unsubscribe on forecast of your city",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "You have unsubscribed"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"

          },
          "400": {
            "description": "Fields are not valid"

          },
          "404": {
            "description": "Not Found. You can get 404 error if data with requested parameters (lat, lon, date etc) does not exist in service database. You must not retry the same request"
          }
        }
      }

    },
    "/weather/getAirCondition": {
      "post": {
        "tags": ["Forecast"],
        "summary": "Current air condition",
        "parameters": [
          {
            "name": "get air condition",
            "in": "body",
            "description": "name of the current city",
            "required": true,
            "schema": {
              "properties": {
                "city": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get air of current city",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/air"
            }
          },
          "401": {
            "description": "Unauthorized"

          },
          "404": {
            "description": "Not Found. You can get 404 error if data with requested parameters (lat, lon, date etc) does not exist in service database. You must not retry the same request"
          }
        }
      }

    },
    "/admin/getAll": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all Subscribers ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "get subscriber by id and delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all subscribers ",
            "schema": {
              "type": "array",
                  "items": {
                    "$ref": "#/definitions/subscribe"
                  }
            }
          },
          "401": {
            "description": "Unauthorized"

          }
        }
      }

    },
    "/admin/delete": {
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete subscriber by id ",
        "parameters": [
          {
            "in": "body",
            "description": "Delete subscriber",
            "required": true,
            "name": "id",
            "schema": {
              "properties": {
                "id":{
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete subscriber ",
            "schema": {
              "type": "string",
              "properties": {
                "data": "subscriber was deleted"
              }
            },
            "examples": {
              "application/json": {
                "data": "subscriber was deleted"
              }
            }
          },
          "400": {
            "description": "Not valid ID"

          },
          "404": {
            "description": "Subscriber not found"

          }
        }
      }

    }
  },

  "definitions": {
    "air": {
      "type": "object",
      "description": "air condition",
      "properties": {
        "co":{
          "type": "string",
          "description": "Сoncentration of CO (Carbon monoxide), μg/m3"
        },
        "no":{
          "type": "string",
          "description": "Сoncentration of NO2 (Nitrogen dioxide), μg/m3"
        },
        "no2":{
          "type": "string",
          "description": "Сoncentration of O3 (Ozone), μg/m3"
        },
        "o3":{
          "type": "string",
          "description": "Сoncentration of SO2 (Sulphur dioxide), μg/m3"
        }
      }
    },

    "subscribe": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "subscriber id"
        },
        "name": {
          "type": "string",
          "description": "subscriber name"
        },
        "email": {
          "type": "string",
          "description": "subscriber email"
        },
        "city": {
          "type": "string",
          "description": "subscriber city"
        },
        "age": {
          "type": "number",
          "description": "subscriber age"
        },
        "createdAt": {
          "type": "string",
          "description": "when subscriber was created"
        },
        "updatedAt": {
          "type": "string",
          "description": "when subscriber was updated"
        }
      }
    },
    "forecast": {
      "type": "object",
      "properties": {
          "astronomical": {
            "type": "object",
            "description": "sunrise and sunset",
            "properties": {
              "sunrise": {
                "type": "string"
              },
              "sunset": {
                "type": "string"
              }
            }
          },
        "weather": {
          "type": "object",
          "description": "data of forecast",
          "properties": {
            "temp": {
              "type": "string"
            },
            "feelsLike": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "humidity": {
              "type": "string"
            },
            "visibility": {
              "type": "string"
            },
            "main": {
              "type": "string"
            },
            "wind": {
              "type": "object",
              "properties": {
                "deg": {
                  "type": "string"
                },
                "speed": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}

